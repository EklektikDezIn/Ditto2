package Ditto;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Elizabeth
 */
public class GUI extends javax.swing.JFrame {

    public List<String> Commands = Arrays.asList(
            "Override Mouse",
            "Get Mouse Position",
            "Move Mouse",
            "Take Screenshot",
            "Take Screenshot File",
            "Move File",
            "Delete File",
            "Get Files",
            "Get Files type",
            "Send File",
            "New var List single",
            "New Var list multi",
            "Create File",
            "Read File",
            "Write To File",
            "Write To Clipboard",
            "Paste From Clipboard",
            "Zip Folder",
            "UnZip Folder",
            "Get OS",
            "Run",
            "Update",
            "Terminate");

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();

        setTitle("Ditto");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                addItems(evt);
            }
        });

        jButton2.setText("Run");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2removeItemsI(evt);
            }
        });
        jScrollPane5.setViewportView(jList2);

        jLabel6.setText("Input");

        jLabel7.setText("Output");

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea4PopUpLO(evt);
            }
        });
        jScrollPane7.setViewportView(jTextArea4);

        jButton7.setText("C");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 202, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(99, 99, 99)
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 156, Short.MAX_VALUE)
                        .add(jLabel7)
                        .add(40, 40, 40)
                        .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(29, 29, 29))
                    .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(jLabel6)
                    .add(jButton7))
                .add(10, 10, 10)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .add(jScrollPane7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton2)
                .add(21, 21, 21))
        );

        jTabbedPane1.addTab("Local", jPanel1);

        jButton1.setText("Encode");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("Decode");
        jButton4.setName(""); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1removeItemsH(evt);
            }
        });
        jScrollPane4.setViewportView(jList1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel4.setText("Input");

        jLabel5.setText("Output");

        jButton6.setText("Send");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jScrollPane8.setViewportView(jTextArea3);

        jButton8.setText("C");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("C");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("P");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jButton1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(44, 44, 44)
                        .add(jButton6)
                        .add(47, 47, 47)
                        .add(jButton9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .add(413, 413, 413))
            .add(jPanel2Layout.createSequentialGroup()
                .add(90, 90, 90)
                .add(jLabel4)
                .add(174, 174, 174)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(13, 13, 13)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jLabel5)
                    .add(jButton10))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .add(jScrollPane3))
                .add(9, 9, 9)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .add(jScrollPane8))
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton1)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jButton4)
                                .add(jButton6)))
                        .addContainerGap())
                    .add(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton9)
                            .add(jButton8))
                        .addContainerGap(10, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Home", jPanel2);

        jButton5.setLabel("Add");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("  Send");

        jLabel2.setText("Receive");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add Item");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList3removeItem(evt);
            }
        });
        jScrollPane2.setViewportView(jList3);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(60, 60, 60)
                        .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18))
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jLabel3))
                    .add(layout.createSequentialGroup()
                        .add(107, 107, 107)
                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 262, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 6, Short.MAX_VALUE)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 468, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(56, 56, 56)
                            .add(jLabel1)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel2)
                            .add(62, 62, 62))
                        .add(layout.createSequentialGroup()
                            .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 455, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(19, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(58, 58, 58)
                .add(jLabel3)
                .add(24, 24, 24)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton5))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton3)
                .add(18, 18, 18)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel1)
                        .add(jLabel2))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(646, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public ArrayList<String> cmdListL = new ArrayList<String>();
    public ArrayList<String> cmdListH = new ArrayList<String>();
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean tempSW = Ditto.ShowWork[0];
        Ditto.ShowWork[0] = false;
        jTextArea4.setText(Convert.arrayToString(Encryption.decode(Convert.stringToArray(Ditto.MessageMaker(cmdListL).substring(1), "\n"))));
        jList2.setListData(new String[0]);
        Ditto.ShowWork[0] = tempSW;
    }//GEN-LAST:event_jButton2ActionPerformed
    private void addItems(List<String> List) {
        for (int i = 0; i < List.size(); i++) {
            jComboBox2.addItem(makeObj(List.get(i)));
        }
    }

    private void removeItemsH(java.awt.event.MouseEvent evt) {
        if (evt.getClickCount() == 2) {
            if (jList1.getSelectedIndex() != -1) {
                cmdListH.remove(jList1.getSelectedIndex());
                String[] lists = new String[cmdListH.size()];
                lists = cmdListH.toArray(lists);
                jList1.setListData(lists);
            }
        }
        lockControls();
    }

    private Object makeObj(final String item) {
        return new Object() {
            @Override
            public String toString() {
                return item;
            }
        };
    }

    private void removeItemsI(java.awt.event.MouseEvent evt) {
        if (evt.getClickCount() == 2) {
            if (jList2.getSelectedIndex() != -1) {
                if (jTabbedPane1.getSelectedIndex() == 0) {
                    cmdListL.remove(jList2.getSelectedIndex());
                    String[] lists = new String[cmdListL.size()];
                    lists = cmdListL.toArray(lists);
                    jList2.setListData(lists);
                } else if (jTabbedPane1.getSelectedIndex() == 1) {
                }
            }
            lockControls();
        }
    }
    private void jList2removeItemsI(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2removeItemsI
        if (evt.getClickCount() == 2) {
            if (jList2.getSelectedIndex() != -1) {
                if (jTabbedPane1.getSelectedIndex() == 0) {
                    cmdListL.remove(jList2.getSelectedIndex());
                    String[] lists = new String[cmdListL.size()];
                    lists = cmdListL.toArray(lists);
                    jList2.setListData(lists);
                } else if (jTabbedPane1.getSelectedIndex() == 1) {
                }
            }
            lockControls();
        }
    }//GEN-LAST:event_jList2removeItemsI
    private void lockControls() {
        if (varcount != -1) {
            if (jList3.getModel().getSize() == varcount) {
                jButton5.setEnabled(false);
                jButton3.setEnabled(true);
                jTextField1.setEnabled(false);
            } else {
                jButton5.setEnabled(true);
                jButton3.setEnabled(false);
                jTextField1.setEnabled(true);
            }
        } else {
            if (jList3.getModel().getSize() > 1) {
                jButton5.setEnabled(false);
                jButton3.setEnabled(true);
                jTextField1.setEnabled(false);
            } else {
                jButton5.setEnabled(true);
                jButton3.setEnabled(false);
                jTextField1.setEnabled(true);
            }
        }
    }
    private void jTextArea4PopUpLO(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea4PopUpLO
    }//GEN-LAST:event_jTextArea4PopUpLO

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        FolderC.writeToClipboard(jTextArea4.getText());
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextArea1.setText(Convert.arrayToString(Encryption.encode(cmdListH)).substring(1));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jTextArea3.setText(Convert.arrayToString(Encryption.decode(Convert.stringToArray(jTextArea2.getText(), "\n"))).substring(1));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jList1removeItemsH(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1removeItemsH
        if (evt.getClickCount() == 2) {
            if (jList1.getSelectedIndex() != -1) {
                cmdListH.remove(jList1.getSelectedIndex());
                String[] lists = new String[cmdListH.size()];
                lists = cmdListH.toArray(lists);
                jList1.setListData(lists);
            }
        }
        lockControls();
    }//GEN-LAST:event_jList1removeItemsH
    private boolean sendFile;
    String fileToSend;

    private void removeItem(java.awt.event.MouseEvent evt) {
        if (evt.getClickCount() == 2) {
            if (jList3.getSelectedIndex() != -1) {
                List.remove(jList3.getSelectedIndex());
                String[] lists = new String[List.size()];
                lists = List.toArray(lists);
                jList3.setListData(lists);
            }
        }
        lockControls();

    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        ArrayList<String> Data;
        jTextArea1.setText(Convert.arrayToString(Encryption.encode(cmdListH)).substring(1));
        if (sendFile) {
            Ditto.User.sendEmails(Ditto.User.address, Ditto.TargetID.toString(), Ditto.IDcode + "\n" + jTextArea1.getText(), fileToSend);
        } else {
            Ditto.User.sendEmails(Ditto.User.address, Ditto.TargetID.toString(), Ditto.IDcode + "\n" + jTextArea1.getText());
        }
        jTextArea2.setText("");
        jTextArea3.setText("");
        sendFile = false;
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        FolderC.writeToClipboard(jTextArea1.getText());
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        FolderC.writeToClipboard(jTextArea3.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        jTextArea2.setText(FolderC.pasteFromClipboard());
    }//GEN-LAST:event_jButton10ActionPerformed
    public ArrayList<String> List = new ArrayList<String>();
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        List.add(jTextField1.getText());
        String[] lists = new String[List.size()];
        lists = List.toArray(lists);
        jList3.setListData(lists);
        jTextField1.setText("");
        lockControls();
    }//GEN-LAST:event_jButton5ActionPerformed
    int varcount;
    public ArrayList<String> varTypes = new ArrayList<String>();
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        varcount = -1;
        int temp = jComboBox2.getSelectedIndex();
        if (temp == 0) {
            jLabel3.setText("Override Mouse-INT_XCOOR INT_YCOOR\n");
        } else if (temp == 1) {
            jLabel3.setText("Get Mouse Position-\n");
        } else if (temp == 2) {
            jLabel3.setText("Move Mouse-INT_XCOOR INT_YCOOR\n");
        } else if (temp == 3) {
            jLabel3.setText("Take Screenshot-\n");
        } else if (temp == 4) {
            jLabel3.setText("Take Screenshot-STRING_FILELOC\n");
        } else if (temp == 5) {
            jLabel3.setText("Move File-STRING_FILELOC~FROM STRING_FILELOC~TO\n");
        } else if (temp == 6) {
            jLabel3.setText("Delete File-STRING_FILELOC\n");
        } else if (temp == 7) {
            jLabel3.setText("Get Files-STRING_DIRECTORY\n");
        } else if (temp == 8) {
            jLabel3.setText("Get Files-STRING_FILELOC STRING_TYPE\n");
        } else if (temp == 9) {
            jLabel3.setText("Send File-STRING_FILELOC\n");
        } else if (temp == 10) {
            jLabel3.setText("New Var List-STRING_TYPE\n");
        } else if (temp == 11) {
            jLabel3.setText("New Var List-STRING_TYPE ITEM_1 ITEM_2 ITEM_N\n");
        } else if (temp == 12) {
            jLabel3.setText("Create File-STRING_FILELOC\n");
        } else if (temp == 13) {
            jLabel3.setText("Zip File-STRING_FILELOC\n");
        } else if (temp == 14) {
            jLabel3.setText("Read File-STRING_FILELOC\n");
        } else if (temp == 15) {
            jLabel3.setText("Write To File-STRING_FILELOC STRING_TEXT\n");
        } else if (temp == 16) {
            jLabel3.setText("Write To Clipboard-STRING_TEXT\n");
        } else if (temp == 17) {
            jLabel3.setText("Copy From Clipboard-\n");
        } else if (temp == 18) {
            jLabel3.setText("New Var List-STRING_TYPE ITEM_1 ITEM_2 ITEM_N\n");
        } else if (temp == 19) {
            jLabel3.setText("UnZip File-\n");
        } else if (temp == 20) {
            jLabel3.setText("Run-STRING_FILELOC\n");
        } else if (temp == 21) {
            jLabel3.setText("Update-\n");
        } else if (temp == 22) {
            jLabel3.setText("Get OS-\n");
        } else if (temp == 23) {
            jLabel3.setText("Terminate-\n");
        }
        varTypes = stringToArray(jLabel3.getText());
        if (!jLabel3.getText().contains("ITEM")) {
            varcount = 0;
            for (int i = 0; i < jLabel3.getText().length(); i++) {
                if (jLabel3.getText().charAt(i) == '_') {
                    varcount++;
                }
            }
        }
        lockControls();
    }//GEN-LAST:event_jComboBox2ActionPerformed
    private ArrayList<String> stringToArray(String str) {
        str = str.substring(str.indexOf("-") + 1);
        ArrayList<String> temp = new ArrayList<String>();
        while (!str.equals("") && str.contains(" ") && str.contains("_")) {
            temp.add(str.substring(0, str.indexOf(" ")).substring(0, str.indexOf("_")));
            str = str.substring(str.indexOf(" ") + 1);
        }
        if (str.contains("_")) {
            temp.add(str.substring(0, str.indexOf("_")));
        }
        return temp;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        boolean cont = true;
        if ("".equals(jTextArea3.getText())) {
            jTextArea1.setText("");
            jTextArea2.setText("");
            jList1.removeAll();
        }
        for (int i = 0; i < List.size(); i++) {
            if (varTypes.get(i).equals("INT")) {
                if (Convert.toInt(List.get(i)) < 0) {
                    cont = false;
                }
            } else if (varTypes.get(i).equals("DOUBLE")) {
                if (Convert.toDouble(List.get(i)) < 0) {
                    cont = false;
                }
            }
        }
        if (cont) {
            if (jTabbedPane1.getSelectedIndex() == 0) {
                cmdListL.add(jLabel3.getText().substring(0, jLabel3.getText().indexOf("-")) + Convert.arrayToString(List).replace("\n", "#") + "#");
                String[] lists = new String[cmdListL.size()];
                lists = cmdListL.toArray(lists);
                jList2.setListData(lists);
                jTextField1.setText("");
                List.clear();
                lists = new String[List.size()];
                lists = List.toArray(lists);
                jList3.setListData(lists);
            } else if (jTabbedPane1.getSelectedIndex() == 1) {
                cmdListH.add(jLabel3.getText().substring(0, jLabel3.getText().indexOf("-")) + Convert.arrayToString(List).replace("\n", "#") + "#");
                String[] lists = new String[cmdListH.size()];
                lists = cmdListH.toArray(lists);
                jList1.setListData(lists);
                jTextField1.setText("");
                List.clear();
                lists = new String[List.size()];
                lists = List.toArray(lists);
                jList3.setListData(lists);
            }

            lockControls();
        } else {
            infoBox("Please Double Check Your Input", "Error!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jList3removeItem(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3removeItem
        if (evt.getClickCount() == 2) {
            if (jList3.getSelectedIndex() != -1) {
                List.remove(jList3.getSelectedIndex());
                String[] lists = new String[List.size()];
                lists = List.toArray(lists);
                jList3.setListData(lists);
            }
        }
        lockControls();
    }//GEN-LAST:event_jList3removeItem

    private void addItems(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_addItems
        jButton3.setEnabled(false);
        addItems(Commands);
        startGuiT();
    }//GEN-LAST:event_addItems

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    //ArrayList<String> checkList = new ArrayList<String>();
    Timer GuiTime;

    public void startGuiT() {
        GuiTime = new Timer();
        GuiTime.scheduleAtFixedRate(new GuiT(), 0, 10000);
    }

    class GuiT extends TimerTask {

        @Override
        public void run() {
            ArrayList<String> Data;
            Data = Ditto.User.readEmail(Ditto.IDcode);
            if (!Data.isEmpty()) {

                if ("".equals(jTextArea2.getText())) {
                    jTextArea2.setText(Convert.arrayToString(Data));
                } else {
                    jTextArea2.setText(jTextArea2.getText() + "\n---------------------------\n" + Convert.arrayToString(Data));
                }
            }
            Data.clear();
            jTextArea3.setText(Convert.arrayToString(Encryption.decode(Convert.stringToArray(jTextArea2.getText(), "\n"))).substring(1));

        }
    }

    public static void infoBox(String infoMessage, String location) {
        JOptionPane.showMessageDialog(null, infoMessage, location, JOptionPane.INFORMATION_MESSAGE);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
